--------------------------------------------------------
--  File created - Wednesday-December-24-2014   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table OFFER
--------------------------------------------------------

  CREATE TABLE OFFER 
   (	ID NUMBER(19,0), 
	MI FLOAT(126), 
	ADDRESS VARCHAR2(20 CHAR), 
	DISTANCE_TO_MPK FLOAT(126), 
	DISTANCE_TO_CENTER FLOAT(126), 
	EXPOSITION VARCHAR2(20 CHAR), 
	FLOOR NUMBER(10,0), 
	N_OF_ROOMS NUMBER(10,0), 
	PRICE FLOAT(126), 
	TOTAL_AREA FLOAT(126), 
	IDUSER NUMBER(19,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE SYSTEM ;
--------------------------------------------------------
--  DDL for Table PROFILE
--------------------------------------------------------

  CREATE TABLE PROFILE 
   (	ID NUMBER(19,0), 
	AREA_A FLOAT(126), 
	AREA_B FLOAT(126), 
	AREA_C FLOAT(126), 
	AREA_D FLOAT(126), 
	CITY_DIST_A FLOAT(126), 
	CITY_DIST_B FLOAT(126), 
	CITY_DIST_C FLOAT(126), 
	CITY_DIST_D FLOAT(126), 
	FLOOR_A FLOAT(126), 
	FLOOR_B FLOAT(126), 
	FLOOR_C FLOAT(126), 
	FLOOR_D FLOAT(126), 
	MPK_DIST_A FLOAT(126), 
	MPK_DIST_B FLOAT(126), 
	MPK_DIST_C FLOAT(126), 
	MPK_DIST_D FLOAT(126), 
	PRICE_A FLOAT(126), 
	PRICE_B FLOAT(126), 
	PRICE_C FLOAT(126), 
	PRICE_D FLOAT(126), 
	USER_ID NUMBER(19,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE SYSTEM ;
--------------------------------------------------------
--  DDL for Table USERDTO
--------------------------------------------------------

  CREATE TABLE USERDTO 
   (	ID NUMBER(19,0), 
	ADDRESS VARCHAR2(20 CHAR), 
	EMAIL VARCHAR2(20 CHAR), 
	LOGIN VARCHAR2(20 CHAR), 
	PASSWORD VARCHAR2(20 CHAR), 
	PHONE VARCHAR2(20 CHAR), 
	TYPE VARCHAR2(20 CHAR)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE SYSTEM ;
REM INSERTING into SYSTEM.OFFER
SET DEFINE OFF;
Insert into SYSTEM.OFFER (ID,MI,ADDRESS,DISTANCE_TO_MPK,DISTANCE_TO_CENTER,EXPOSITION,FLOOR,N_OF_ROOMS,PRICE,TOTAL_AREA,IDUSER) values (30,0,'adres1',10.608039,9.623753,'E',7,1,421.6991,39.369537,11);
Insert into SYSTEM.OFFER (ID,MI,ADDRESS,DISTANCE_TO_MPK,DISTANCE_TO_CENTER,EXPOSITION,FLOOR,N_OF_ROOMS,PRICE,TOTAL_AREA,IDUSER) values (31,0.47203,'adres2',221.0528,4.767927,'N',8,5,191.43408,28.799889,12);
Insert into SYSTEM.OFFER (ID,MI,ADDRESS,DISTANCE_TO_MPK,DISTANCE_TO_CENTER,EXPOSITION,FLOOR,N_OF_ROOMS,PRICE,TOTAL_AREA,IDUSER) values (32,0,'adres3',353.04803,3.821718,'W',1,6,1009.79297,38.538986,12);
Insert into SYSTEM.OFFER (ID,MI,ADDRESS,DISTANCE_TO_MPK,DISTANCE_TO_CENTER,EXPOSITION,FLOOR,N_OF_ROOMS,PRICE,TOTAL_AREA,IDUSER) values (33,0,'adres4',708.07336,9.361984,'E',7,2,1029.2908,14.451919,12);
Insert into SYSTEM.OFFER (ID,MI,ADDRESS,DISTANCE_TO_MPK,DISTANCE_TO_CENTER,EXPOSITION,FLOOR,N_OF_ROOMS,PRICE,TOTAL_AREA,IDUSER) values (34,0,'adres5',939.3011,7.792986,'S',1,1,641.52606,75.20349,11);
Insert into SYSTEM.OFFER (ID,MI,ADDRESS,DISTANCE_TO_MPK,DISTANCE_TO_CENTER,EXPOSITION,FLOOR,N_OF_ROOMS,PRICE,TOTAL_AREA,IDUSER) values (35,0,'adres6',733.4982,5.0898685,'N',3,6,457.818,19.553146,12);
Insert into SYSTEM.OFFER (ID,MI,ADDRESS,DISTANCE_TO_MPK,DISTANCE_TO_CENTER,EXPOSITION,FLOOR,N_OF_ROOMS,PRICE,TOTAL_AREA,IDUSER) values (36,0.68146,'adres7',857.42725,9.994123,'E',1,1,143.26425,19.485018,11);
Insert into SYSTEM.OFFER (ID,MI,ADDRESS,DISTANCE_TO_MPK,DISTANCE_TO_CENTER,EXPOSITION,FLOOR,N_OF_ROOMS,PRICE,TOTAL_AREA,IDUSER) values (37,0,'adres8',566.9811,7.1659427,'N',3,6,711.53674,40.253967,11);
Insert into SYSTEM.OFFER (ID,MI,ADDRESS,DISTANCE_TO_MPK,DISTANCE_TO_CENTER,EXPOSITION,FLOOR,N_OF_ROOMS,PRICE,TOTAL_AREA,IDUSER) values (38,0,'adres9',1014.0717,7.277602,'S',1,1,868.523,11.214957,11);
Insert into SYSTEM.OFFER (ID,MI,ADDRESS,DISTANCE_TO_MPK,DISTANCE_TO_CENTER,EXPOSITION,FLOOR,N_OF_ROOMS,PRICE,TOTAL_AREA,IDUSER) values (39,0,'adres10',17.725191,4.198478,'E',1,6,313.6549,55.58545,11);
Insert into SYSTEM.OFFER (ID,MI,ADDRESS,DISTANCE_TO_MPK,DISTANCE_TO_CENTER,EXPOSITION,FLOOR,N_OF_ROOMS,PRICE,TOTAL_AREA,IDUSER) values (40,0,'adres11',780.4328,10.240952,'W',11,4,317.91162,50.37965,12);
Insert into SYSTEM.OFFER (ID,MI,ADDRESS,DISTANCE_TO_MPK,DISTANCE_TO_CENTER,EXPOSITION,FLOOR,N_OF_ROOMS,PRICE,TOTAL_AREA,IDUSER) values (41,0,'adres12',890.9005,6.538495,'N',9,4,387.51566,107.89801,12);
Insert into SYSTEM.OFFER (ID,MI,ADDRESS,DISTANCE_TO_MPK,DISTANCE_TO_CENTER,EXPOSITION,FLOOR,N_OF_ROOMS,PRICE,TOTAL_AREA,IDUSER) values (42,0,'adres13',791.78784,11.530924,'E',1,1,374.59106,34.896694,12);
Insert into SYSTEM.OFFER (ID,MI,ADDRESS,DISTANCE_TO_MPK,DISTANCE_TO_CENTER,EXPOSITION,FLOOR,N_OF_ROOMS,PRICE,TOTAL_AREA,IDUSER) values (43,0,'adres14',280.1892,6.6347294,'N',3,2,648.5522,91.37844,12);
Insert into SYSTEM.OFFER (ID,MI,ADDRESS,DISTANCE_TO_MPK,DISTANCE_TO_CENTER,EXPOSITION,FLOOR,N_OF_ROOMS,PRICE,TOTAL_AREA,IDUSER) values (44,0,'adres15',598.23065,9.014115,'W',5,5,333.2351,42.840122,11);
Insert into SYSTEM.OFFER (ID,MI,ADDRESS,DISTANCE_TO_MPK,DISTANCE_TO_CENTER,EXPOSITION,FLOOR,N_OF_ROOMS,PRICE,TOTAL_AREA,IDUSER) values (45,0,'adres16',452.69803,11.753947,'E',1,5,513.8715,70.487045,11);
Insert into SYSTEM.OFFER (ID,MI,ADDRESS,DISTANCE_TO_MPK,DISTANCE_TO_CENTER,EXPOSITION,FLOOR,N_OF_ROOMS,PRICE,TOTAL_AREA,IDUSER) values (46,0,'adres17',971.3094,2.473481,'S',5,2,414.2646,103.27206,12);
Insert into SYSTEM.OFFER (ID,MI,ADDRESS,DISTANCE_TO_MPK,DISTANCE_TO_CENTER,EXPOSITION,FLOOR,N_OF_ROOMS,PRICE,TOTAL_AREA,IDUSER) values (47,0,'adres18',822.84186,9.824908,'N',7,1,1108.4027,57.968285,11);
Insert into SYSTEM.OFFER (ID,MI,ADDRESS,DISTANCE_TO_MPK,DISTANCE_TO_CENTER,EXPOSITION,FLOOR,N_OF_ROOMS,PRICE,TOTAL_AREA,IDUSER) values (48,0.90194,'adres19',981.4397,3.0283577,'E',1,2,92.553635,46.998653,11);
Insert into SYSTEM.OFFER (ID,MI,ADDRESS,DISTANCE_TO_MPK,DISTANCE_TO_CENTER,EXPOSITION,FLOOR,N_OF_ROOMS,PRICE,TOTAL_AREA,IDUSER) values (49,0,'adres20',516.68646,7.800724,'N',11,5,1193.8926,58.49119,12);
Insert into SYSTEM.OFFER (ID,MI,ADDRESS,DISTANCE_TO_MPK,DISTANCE_TO_CENTER,EXPOSITION,FLOOR,N_OF_ROOMS,PRICE,TOTAL_AREA,IDUSER) values (50,0,'adres21',215.7245,8.537351,'S',8,1,499.25583,89.06986,12);
Insert into SYSTEM.OFFER (ID,MI,ADDRESS,DISTANCE_TO_MPK,DISTANCE_TO_CENTER,EXPOSITION,FLOOR,N_OF_ROOMS,PRICE,TOTAL_AREA,IDUSER) values (51,0.36181,'adres22',556.40424,11.401133,'E',5,2,216.78296,31.371645,12);
Insert into SYSTEM.OFFER (ID,MI,ADDRESS,DISTANCE_TO_MPK,DISTANCE_TO_CENTER,EXPOSITION,FLOOR,N_OF_ROOMS,PRICE,TOTAL_AREA,IDUSER) values (52,0,'adres23',232.22867,8.176503,'W',10,6,1011.6894,93.470955,11);
Insert into SYSTEM.OFFER (ID,MI,ADDRESS,DISTANCE_TO_MPK,DISTANCE_TO_CENTER,EXPOSITION,FLOOR,N_OF_ROOMS,PRICE,TOTAL_AREA,IDUSER) values (53,0,'adres24',922.90515,4.8014593,'N',2,3,864.7855,88.238716,12);
Insert into SYSTEM.OFFER (ID,MI,ADDRESS,DISTANCE_TO_MPK,DISTANCE_TO_CENTER,EXPOSITION,FLOOR,N_OF_ROOMS,PRICE,TOTAL_AREA,IDUSER) values (54,0,'adres25',612.1688,4.3257365,'E',9,4,749.7061,109.0192,12);
Insert into SYSTEM.OFFER (ID,MI,ADDRESS,DISTANCE_TO_MPK,DISTANCE_TO_CENTER,EXPOSITION,FLOOR,N_OF_ROOMS,PRICE,TOTAL_AREA,IDUSER) values (55,0,'adres26',1107.5956,5.682992,'N',7,4,577.5033,42.80357,11);
Insert into SYSTEM.OFFER (ID,MI,ADDRESS,DISTANCE_TO_MPK,DISTANCE_TO_CENTER,EXPOSITION,FLOOR,N_OF_ROOMS,PRICE,TOTAL_AREA,IDUSER) values (56,0,'adres27',1010.0803,4.233471,'W',10,3,1191.4409,68.69916,11);
Insert into SYSTEM.OFFER (ID,MI,ADDRESS,DISTANCE_TO_MPK,DISTANCE_TO_CENTER,EXPOSITION,FLOOR,N_OF_ROOMS,PRICE,TOTAL_AREA,IDUSER) values (57,0,'adres28',152.55061,7.0856867,'E',8,3,643.6385,76.6407,12);
Insert into SYSTEM.OFFER (ID,MI,ADDRESS,DISTANCE_TO_MPK,DISTANCE_TO_CENTER,EXPOSITION,FLOOR,N_OF_ROOMS,PRICE,TOTAL_AREA,IDUSER) values (58,0,'adres29',943.2889,8.044519,'S',6,2,685.6636,41.54445,11);
Insert into SYSTEM.OFFER (ID,MI,ADDRESS,DISTANCE_TO_MPK,DISTANCE_TO_CENTER,EXPOSITION,FLOOR,N_OF_ROOMS,PRICE,TOTAL_AREA,IDUSER) values (59,0,'adres30',498.02792,10.387852,'N',7,1,1052.4507,109.18338,12);
Insert into SYSTEM.OFFER (ID,MI,ADDRESS,DISTANCE_TO_MPK,DISTANCE_TO_CENTER,EXPOSITION,FLOOR,N_OF_ROOMS,PRICE,TOTAL_AREA,IDUSER) values (60,0,'adres31',703.017,6.668998,'E',5,1,1238.4884,43.81725,11);
Insert into SYSTEM.OFFER (ID,MI,ADDRESS,DISTANCE_TO_MPK,DISTANCE_TO_CENTER,EXPOSITION,FLOOR,N_OF_ROOMS,PRICE,TOTAL_AREA,IDUSER) values (61,0,'adres32',155.97067,4.2383003,'N',8,2,381.24414,87.16297,12);
Insert into SYSTEM.OFFER (ID,MI,ADDRESS,DISTANCE_TO_MPK,DISTANCE_TO_CENTER,EXPOSITION,FLOOR,N_OF_ROOMS,PRICE,TOTAL_AREA,IDUSER) values (62,0.3667,'adres33',1145.8467,7.001027,'S',6,6,215.65944,109.98375,11);
Insert into SYSTEM.OFFER (ID,MI,ADDRESS,DISTANCE_TO_MPK,DISTANCE_TO_CENTER,EXPOSITION,FLOOR,N_OF_ROOMS,PRICE,TOTAL_AREA,IDUSER) values (63,0,'adres34',420.65872,3.75585,'E',8,6,560.3895,68.26309,11);
Insert into SYSTEM.OFFER (ID,MI,ADDRESS,DISTANCE_TO_MPK,DISTANCE_TO_CENTER,EXPOSITION,FLOOR,N_OF_ROOMS,PRICE,TOTAL_AREA,IDUSER) values (64,0,'adres35',547.0591,9.610213,'W',9,3,400.8252,39.484406,12);
Insert into SYSTEM.OFFER (ID,MI,ADDRESS,DISTANCE_TO_MPK,DISTANCE_TO_CENTER,EXPOSITION,FLOOR,N_OF_ROOMS,PRICE,TOTAL_AREA,IDUSER) values (65,0,'adres36',1079.9061,5.6973653,'N',1,2,999.34625,34.073147,11);
Insert into SYSTEM.OFFER (ID,MI,ADDRESS,DISTANCE_TO_MPK,DISTANCE_TO_CENTER,EXPOSITION,FLOOR,N_OF_ROOMS,PRICE,TOTAL_AREA,IDUSER) values (66,0,'adres37',935.2734,6.9399962,'E',11,3,806.9102,95.16411,11);
Insert into SYSTEM.OFFER (ID,MI,ADDRESS,DISTANCE_TO_MPK,DISTANCE_TO_CENTER,EXPOSITION,FLOOR,N_OF_ROOMS,PRICE,TOTAL_AREA,IDUSER) values (67,0,'adres38',391.02124,7.7624416,'N',10,2,1159.1688,54.443657,11);
Insert into SYSTEM.OFFER (ID,MI,ADDRESS,DISTANCE_TO_MPK,DISTANCE_TO_CENTER,EXPOSITION,FLOOR,N_OF_ROOMS,PRICE,TOTAL_AREA,IDUSER) values (68,0,'adres39',527.1614,0.99589777,'W',5,2,1060.3027,58.703117,12);
Insert into SYSTEM.OFFER (ID,MI,ADDRESS,DISTANCE_TO_MPK,DISTANCE_TO_CENTER,EXPOSITION,FLOOR,N_OF_ROOMS,PRICE,TOTAL_AREA,IDUSER) values (69,0,'adres40',352.17227,2.310467,'E',9,2,732.2312,99.43905,11);
Insert into SYSTEM.OFFER (ID,MI,ADDRESS,DISTANCE_TO_MPK,DISTANCE_TO_CENTER,EXPOSITION,FLOOR,N_OF_ROOMS,PRICE,TOTAL_AREA,IDUSER) values (70,0.59599,'adres41',428.21854,9.324959,'S',1,3,162.92136,101.354515,11);
Insert into SYSTEM.OFFER (ID,MI,ADDRESS,DISTANCE_TO_MPK,DISTANCE_TO_CENTER,EXPOSITION,FLOOR,N_OF_ROOMS,PRICE,TOTAL_AREA,IDUSER) values (71,0,'adres42',645.1661,5.5833616,'N',3,2,452.3096,92.033745,12);
Insert into SYSTEM.OFFER (ID,MI,ADDRESS,DISTANCE_TO_MPK,DISTANCE_TO_CENTER,EXPOSITION,FLOOR,N_OF_ROOMS,PRICE,TOTAL_AREA,IDUSER) values (72,0.52679,'adres43',409.01443,2.4281359,'E',1,5,178.83722,46.817158,11);
Insert into SYSTEM.OFFER (ID,MI,ADDRESS,DISTANCE_TO_MPK,DISTANCE_TO_CENTER,EXPOSITION,FLOOR,N_OF_ROOMS,PRICE,TOTAL_AREA,IDUSER) values (73,0,'adres44',1175.5737,11.597574,'N',2,6,470.02612,96.89549,12);
Insert into SYSTEM.OFFER (ID,MI,ADDRESS,DISTANCE_TO_MPK,DISTANCE_TO_CENTER,EXPOSITION,FLOOR,N_OF_ROOMS,PRICE,TOTAL_AREA,IDUSER) values (74,0,'adres45',1127.6086,6.4648633,'S',2,5,1149.6697,40.58754,12);
Insert into SYSTEM.OFFER (ID,MI,ADDRESS,DISTANCE_TO_MPK,DISTANCE_TO_CENTER,EXPOSITION,FLOOR,N_OF_ROOMS,PRICE,TOTAL_AREA,IDUSER) values (75,0,'adres46',40.827736,4.923196,'E',1,1,803.9514,28.857925,12);
Insert into SYSTEM.OFFER (ID,MI,ADDRESS,DISTANCE_TO_MPK,DISTANCE_TO_CENTER,EXPOSITION,FLOOR,N_OF_ROOMS,PRICE,TOTAL_AREA,IDUSER) values (76,0,'adres47',485.33115,6.9001465,'W',2,3,439.92166,100.1875,11);
Insert into SYSTEM.OFFER (ID,MI,ADDRESS,DISTANCE_TO_MPK,DISTANCE_TO_CENTER,EXPOSITION,FLOOR,N_OF_ROOMS,PRICE,TOTAL_AREA,IDUSER) values (77,0.10026,'adres48',910.6526,7.040847,'N',4,4,276.94135,10.429684,11);
Insert into SYSTEM.OFFER (ID,MI,ADDRESS,DISTANCE_TO_MPK,DISTANCE_TO_CENTER,EXPOSITION,FLOOR,N_OF_ROOMS,PRICE,TOTAL_AREA,IDUSER) values (78,0,'adres49',556.9556,6.2830877,'E',11,5,742.8798,10.07667,11);
Insert into SYSTEM.OFFER (ID,MI,ADDRESS,DISTANCE_TO_MPK,DISTANCE_TO_CENTER,EXPOSITION,FLOOR,N_OF_ROOMS,PRICE,TOTAL_AREA,IDUSER) values (79,0,'adres50',645.51385,3.481159,'N',1,2,762.6023,99.67731,12);
REM INSERTING into SYSTEM.PROFILE
SET DEFINE OFF;
Insert into SYSTEM.PROFILE (ID,AREA_A,AREA_B,AREA_C,AREA_D,CITY_DIST_A,CITY_DIST_B,CITY_DIST_C,CITY_DIST_D,FLOOR_A,FLOOR_B,FLOOR_C,FLOOR_D,MPK_DIST_A,MPK_DIST_B,MPK_DIST_C,MPK_DIST_D,PRICE_A,PRICE_B,PRICE_C,PRICE_D,USER_ID) values (20,20,50,70,100,1,5,7,10,1,3,5,7,20,200,500,1000,70,300,500,1000,10);
REM INSERTING into SYSTEM.USERDTO
SET DEFINE OFF;
Insert into SYSTEM.USERDTO (ID,ADDRESS,EMAIL,LOGIN,PASSWORD,PHONE,TYPE) values (10,'userowo','user@user.user','user','user','1234567890','commonUser');
Insert into SYSTEM.USERDTO (ID,ADDRESS,EMAIL,LOGIN,PASSWORD,PHONE,TYPE) values (11,'devowo','dev@dev.dev','dev','dev','0987654321','superUser');
Insert into SYSTEM.USERDTO (ID,ADDRESS,EMAIL,LOGIN,PASSWORD,PHONE,TYPE) values (12,'devowo','dev1@dev1.dev','dev1','dev1','1023954633','superUser');
Insert into SYSTEM.USERDTO (ID,ADDRESS,EMAIL,LOGIN,PASSWORD,PHONE,TYPE) values (13,'adminowo','admin@admin.admin','admin','admin','0192837465','admin');
--------------------------------------------------------
--  DDL for Function AREA
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION AREA 
(
  TYP IN VARCHAR
  ,ID_number IN NUMBER
  ,treshold IN NUMBER
  ) RETURN SYS_REFCURSOR IS
  my_cursor SYS_REFCURSOR;
BEGIN
IF TYP='low' THEN update offer SET MI = FP_KL(total_area,(Select area_a from profile where user_id=ID_number),(Select area_b from profile where user_id=ID_number));
ELSIF TYP='avg' THEN update offer SET MI = FP_TR(total_area,(Select area_a from profile where user_id=ID_number),(Select area_b from profile where user_id=ID_number),(Select area_c from profile where user_id=ID_number),(Select area_d from profile where user_id=ID_number));
ELSE update offer SET MI = FP_KG(total_area,(Select area_c from profile where user_id=ID_number),(Select area_d from profile where user_id=ID_number));
END IF;
  open my_cursor FOR select * from offer where MI > treshold order by MI desc;
  RETURN my_cursor;
END AREA;

/
--------------------------------------------------------
--  DDL for Function CITY
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION CITY 
(
  TYP IN VARCHAR
  ,ID_number IN NUMBER
  ,treshold IN NUMBER
  ) RETURN SYS_REFCURSOR IS
  my_cursor SYS_REFCURSOR;
BEGIN
IF TYP='low' THEN update offer SET MI = FP_KL(distance_to_center,(Select city_dist_a from profile where user_id=ID_number),(Select city_dist_b from profile where user_id=ID_number));
ELSIF TYP='avg' THEN update offer SET MI = FP_TR(distance_to_center,(Select city_dist_a from profile where user_id=ID_number),(Select city_dist_b from profile where user_id=ID_number),(Select city_dist_c from profile where user_id=ID_number),(Select city_dist_d from profile where user_id=ID_number));
ELSE update offer SET MI = FP_KG(distance_to_center,(Select city_dist_c from profile where user_id=ID_number),(Select city_dist_d from profile where user_id=ID_number));
END IF;
  open my_cursor FOR select * from offer where MI > treshold order by MI desc;
  RETURN my_cursor;
END CITY;

/
--------------------------------------------------------
--  DDL for Function FLOOR_FCT
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION FLOOR_FCT 
(
  TYP IN VARCHAR
  ,ID_number IN NUMBER
  ,treshold IN NUMBER
  ) RETURN SYS_REFCURSOR IS
  my_cursor SYS_REFCURSOR;
BEGIN
IF TYP='low' THEN update offer SET MI = FP_KL(floor,(Select floor_a from profile where user_id=ID_number),(Select floor_b from profile where user_id=ID_number));
ELSIF TYP='avg' THEN update offer SET MI = FP_TR(floor,(Select floor_a from profile where user_id=ID_number),(Select floor_b from profile where user_id=ID_number),(Select floor_c from profile where user_id=ID_number),(Select floor_d from profile where user_id=ID_number));
ELSE update offer SET MI = FP_KG(floor,(Select floor_c from profile where user_id=ID_number),(Select floor_d from profile where user_id=ID_number));
END IF;
  open my_cursor FOR select * from offer where MI > treshold order by MI desc;
  RETURN my_cursor;
END FLOOR_FCT;

/
--------------------------------------------------------
--  DDL for Function FP_KG
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION FP_KG 
(
  X IN FLOAT 
, C IN FLOAT 
, D IN FLOAT 
) RETURN NUMBER IS
Y NUMBER(6,5);

BEGIN
  IF (X <= C) THEN Y := 0.0;
  ELSIF(X > D) THEN Y := 1.0;
  ELSE Y := (X-C) / (D-C);
  END IF;
  RETURN Y;
END FP_KG;

/
--------------------------------------------------------
--  DDL for Function FP_KL
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION FP_KL 
  (
  X IN FLOAT 
, A IN FLOAT 
, B IN FLOAT 
) RETURN NUMBER IS
Y NUMBER(6,5);

BEGIN
  IF (X <= A) THEN Y := 1.0;
  ELSIF(X > B) THEN Y := 0.0;
  ELSE Y := (B-X) / (B-A);
  END IF;
  RETURN Y;
END FP_KL;

/
--------------------------------------------------------
--  DDL for Function FP_TR
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION FP_TR 
(
  X IN FLOAT 
, A IN FLOAT 
, B IN FLOAT 
, C IN FLOAT 
, D IN FLOAT 
) RETURN NUMBER IS
Y NUMBER(6,5);

BEGIN
  IF ((X <= A) OR (X > D)) THEN Y := 0.0;
  ELSIF(X < B) THEN Y := (X-A) / (B-A);
  ELSIF(X < C) THEN Y := 1.0;
  ELSE Y := (D-X) / (D-C);
  END IF;
  RETURN Y;
END FP_TR;

/
--------------------------------------------------------
--  DDL for Function FUZZY_FCT
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION FUZZY_FCT 
(
cecha IN VARCHAR
,typ IN VARCHAR
,ID_number IN NUMBER
,treshold IN NUMBER
) RETURN SYS_REFCURSOR IS
my_cursor SYS_REFCURSOR;
BEGIN
  update offer SET MI = 0.0;
  IF cecha ='price' THEN my_cursor:=price(typ,id_number,treshold);
  ELSIF cecha='area' THEN my_cursor:=area(typ,id_number,treshold);
  ELSIF cecha='floor' THEN my_cursor:=floor_fct(typ,id_number,treshold);
  ELSIF cecha='center' THEN my_cursor:=city(typ,id_number,treshold);
  ELSE my_cursor:=mpk(typ,id_number,treshold);
  END IF;
  RETURN my_cursor;
END FUZZY_FCT;

/
--------------------------------------------------------
--  DDL for Function MPK
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION MPK 
(
  TYP IN VARCHAR
  ,ID_number IN NUMBER
  ,treshold IN NUMBER
  ) RETURN SYS_REFCURSOR IS
  my_cursor SYS_REFCURSOR;
BEGIN
IF TYP='low' THEN update offer SET MI = FP_KL(distance_to_mpk,(Select mpk_dist_a from profile where user_id=ID_number),(Select mpk_dist_b from profile where user_id=ID_number));
ELSIF TYP='avg' THEN update offer SET MI = FP_TR(distance_to_mpk,(Select mpk_dist_a from profile where user_id=ID_number),(Select mpk_dist_b from profile where user_id=ID_number),(Select mpk_dist_c from profile where user_id=ID_number),(Select mpk_dist_d from profile where user_id=ID_number));
ELSE update offer SET MI = FP_KG(distance_to_mpk,(Select mpk_dist_c from profile where user_id=ID_number),(Select mpk_dist_d from profile where user_id=ID_number));
END IF;
  open my_cursor FOR select * from offer where MI > treshold order by MI desc;
  RETURN my_cursor;
END MPK;

/
--------------------------------------------------------
--  DDL for Function PRICE
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION PRICE 
(
  TYP IN VARCHAR
  ,ID_number IN NUMBER
  ,treshold IN NUMBER
  ) RETURN SYS_REFCURSOR IS
  my_cursor SYS_REFCURSOR;
BEGIN
IF TYP='low' THEN update offer SET MI = FP_KL(price,(Select price_a from profile where user_id=ID_number),(Select price_b from profile where user_id=ID_number));
ELSIF TYP='avg' THEN update offer SET MI = FP_TR(price,(Select price_a from profile where user_id=ID_number),(Select price_b from profile where user_id=ID_number),(Select price_c from profile where user_id=ID_number),(Select price_d from profile where user_id=ID_number));
ELSE update offer SET MI = FP_KG(price,(Select price_c from profile where user_id=ID_number),(Select price_d from profile where user_id=ID_number));
END IF;
 open my_cursor FOR select * from offer where MI > treshold order by MI desc;
 RETURN my_cursor;
END PRICE;

/
